{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Person.js","components/Persons.js","components/Notification.js","services/phonebook.js","App.js","index.js"],"names":["Filter","filterStr","filterData","value","onChange","type","PersonForm","handleSubmitForm","newName","setNewName","newNumber","setNewNumber","onSubmit","e","target","Person","name","number","deletePerson","onClick","Persons","matchPersons","map","p","id","Notification","message","flag","notificatinStyles","color","style","className","baseUrl","axios","get","then","response","data","person","post","delete","newPerson","put","App","useState","persons","setPersons","setFilterStr","filter","toUpperCase","includes","notificationMessage","setNotificationMessage","notificationFlag","setNotificationFlag","useEffect","console","log","phonebookService","initialPersons","length","preventDefault","some","window","confirm","returnedPerson","setTimeout","catch","error","validateUniqName","concat","deletedPerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.259978a8.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({filterStr, filterData}) => {\n  return (\n    <div>\n      filter shown with \n      <input value={filterStr} onChange={filterData} type=\"text\"/> \n    </div>\n  )\n}\n\nexport default Filter\n","import React from 'react'\n\nconst PersonForm = ({handleSubmitForm, newName, setNewName, newNumber, setNewNumber}) => {\n  return (\n    <form onSubmit={handleSubmitForm} >\n      <div>\n        name: <input value={newName} onChange={(e) => setNewName(e.target.value)} />\n      </div>\n      <div>\n        number: <input value={newNumber} onChange={(e) => setNewNumber(e.target.value)} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nexport default PersonForm;","import React from 'react'\n\nconst Person = ({name, number, deletePerson}) => {\n  return (\n    <li>{name} {number} <button onClick={deletePerson}>delete</button></li>\n  )\n}\n\nexport default Person;","import React from 'react'\nimport Person from './Person'\n\nconst Persons = ({matchPersons, deletePerson}) => {\n  return (\n    <ul>\n      {matchPersons.map((p) => \n        <Person \n          key={p.name} \n          name={p.name} \n          number={p.number} \n          deletePerson={() => deletePerson(p.id)}\n        />\n      )}\n    </ul>\n  )\n}\n\nexport default Persons;","import React from 'react';\n\nconst Notification = ({ message, flag }) => {\n  if (message === null) {\n    return null\n  }\n\n  const notificatinStyles = flag === 'success' \n    ? {\n      color: 'green',\n    }\n    : {\n      color: 'red',\n    };\n\n  return (\n    <div style={notificatinStyles} className=\"success\">\n      {message}\n    </div>\n  )\n}\n\nexport default Notification;","import axios from 'axios';\nconst baseUrl = '/api/persons';\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then(response => response.data);\n}\n\nconst create = person => {\n  const request = axios.post(baseUrl, person);\n  return request.then(response => response.data);\n}\n\nconst deletePerson = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request.then(response => response.data);\n}\n\nconst update = (id, newPerson) => {\n  const request = axios.put(`${baseUrl}/${id}`, newPerson);\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, deletePerson, update }","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Notification from './components/Notification'\nimport phonebookService from './services/phonebook'\nimport './index.css'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filterStr, setFilterStr ] = useState('')\n  const matchPersons = \n    persons.filter(p => p.name.toUpperCase().includes(filterStr.toUpperCase()))\n  const [ notificationMessage, setNotificationMessage] = useState(null)\n  const [ notificationFlag, setNotificationFlag] = useState('success')\n\n  useEffect(() => {\n    console.log('effect')\n    phonebookService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n  console.log('render', persons.length, 'persons')\n\n  const validateUniqName = (newPerson) => {\n    const isUniqName = !persons.some(p => p.name === newName) \n\n    if (isUniqName) return true\n\n    const existedPerson = persons.filter(p => p.name === newName);\n    const { id, name } = existedPerson[0];\n\n    const isReplace = window.confirm(`${name} is already added to phonebook, replace the old number with a new one?`);\n\n    if (isReplace) {\n      phonebookService\n        .update(id, newPerson)\n        .then(returnedPerson => {\n          setNotificationMessage(`${newName} number is updated`);\n          setTimeout(() => {\n            setNotificationMessage(null);\n          }, 5000)\n          setPersons(persons.map(p => p.id !== id ? p : returnedPerson))\n        })\n        .catch(error => {\n          setNotificationFlag('error');\n          setNotificationMessage(`information of ${newName} has already been removed from the server`);\n          setTimeout(() => {\n            setNotificationMessage(null);\n            setNotificationFlag('success');\n          }, 5000);\n          setPersons(persons.filter(p => p.id !== id));\n        })\n    }\n\n    return false\n  }\n\n  const filterData = (e) => {\n    setFilterStr(e.target.value)\n  }\n\n  const handleSubmitForm = (e) => {\n    e.preventDefault()\n\n    const newPerson = {\n      name: newName,\n      number: newNumber,\n    }\n\n    if ( !validateUniqName(newPerson) ) return\n    \n    phonebookService\n      .create(newPerson)\n      .then(returnedPerson => {\n        setNotificationMessage(`added ${returnedPerson.name}`);\n        setTimeout(() => {\n          setNotificationMessage(null);\n        }, 5000);\n        setPersons(persons.concat(returnedPerson))\n      })\n      .catch(error => {\n        setNotificationFlag('error');\n        setNotificationMessage(`${error.response.data.error}`);\n        setTimeout(() => {\n          setNotificationFlag('success');\n          setNotificationMessage(null);\n        }, 5000);\n      })\n\n    setNewName('')\n    setNewNumber('')\n  }\n\n  const deletePerson = (id) => {\n    const deletedPerson = persons.filter(p => p.id === id);\n    const isDelete = window.confirm(`delete ${deletedPerson[0].name}?`);\n\n    if ( isDelete ) {\n      phonebookService\n        .deletePerson(id)\n        .then(() => {\n          setNotificationMessage(`deleted ${deletedPerson[0].name}`);\n          setTimeout(() => {\n            setNotificationMessage(null);\n          }, 5000);\n          setPersons(persons.filter(p => p.id !== id));\n        })\n        .catch(error => {\n          setNotificationFlag('error');\n          setNotificationMessage(`${error.response.data.error}`);\n          setTimeout(() => {\n            setNotificationFlag('success');\n            setNotificationMessage(null);\n          }, 5000);\n        })\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notificationMessage} flag={notificationFlag} />\n      <Filter filterStr={filterStr} filterData={filterData}/>\n      <h3>Add a new</h3>\n      \n      <PersonForm \n        handleSubmitForm={handleSubmitForm} \n        newName={newName} \n        setNewName={setNewName} \n        newNumber={newNumber} \n        setNewNumber={setNewNumber} \n      />\n      <h3>Numbers</h3>\n      <Persons matchPersons={matchPersons} deletePerson={deletePerson} />\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n)"],"sourceRoot":""}